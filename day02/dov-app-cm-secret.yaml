---
apiVersion: apps/v1
kind: Deployment
metadata:
   name: dov-deploy
   labels:
      app: dov
      name: dov-deploy
      created-by: ngch
      dept: GIT
   namespace: dov-ns
spec: 
   # number of instance
   replicas: 3
   # select pods belonging to this deployment
   selector:
      matchLabels:
         apps: dov
         name: dov-po
   # pod template
   template:
      metadata:
         name: dov-po
         labels:
            apps: dov
            name: dov-po
      spec:
         containers:
         - name: dov-container
           image: stackupiss/dov-bear:v1
           imagePullPolicy: IfNotPresent
           env:
           - name: INSTANCE_NAME
             valueFrom:
                configMapKeyRef:
                   name: dov-cm
                   key: app_name
           - name: INSTANCE_HASH
             valueFrom:
                fieldRef:
                   fieldPath: status.hostIP
                #secretKeyRef:
                #   name: dov-secret
                #   key: app_instance
           ports:
           - containerPort: 3000
           livenessProbe:
              httpGet:
                 path: /healthz
                 port: 3000

---
apiVersion: v1
kind: Service
metadata:
   name: dov-service
   labels:
      app: dov
      name: dov-service
      created-by: ngch
      dept: GIT
   namespace: dov-ns
spec: 
   #type: ClusterIP
   #type: NodePort
   type: LoadBalancer
   selector:
      apps: dov
      name: dov-po
   ports:
      - name: http
        port: 8080
        targetPort: 3000
        protocol: TCP

# kubectl get all -n dov-ns --show-labels
# kubectl scale deploy/dov-deploy -n dov-ns --replicas=1
# kubectl port-forward deploy/dov-deploy -n dov-ns --address='0.0.0.0' 8080:3000
# <service-name>.<namespace>.svc.cluster.local
# dov-service.dov-ns.svc.cluster.local
# kubectl run netshoot -n dov-ns -ti --restart=Never --rm --image nicolaka/netshoot -- /bin/bash
# nslookup dov-service.dov-ns.svc.cluster.local
# curl -v http://dov-service.dov-ns.svc.cluster.local:8080